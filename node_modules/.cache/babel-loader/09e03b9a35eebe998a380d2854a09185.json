{"ast":null,"code":"var _jsxFileName = \"/home/animesh/Desktop/weavers-web/Project/ecommerce/client/src/Components/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { DataContext } from \"./DataProvider\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Cart() {\n  _s();\n\n  const value = useContext(DataContext);\n  const [cart, setCart] = value.cart;\n  const [total, setTotal] = useState(0);\n  useEffect(() => {\n    const getTotal = () => {\n      const res = cart.reduce((prev, item) => {\n        return prev + item.price * item.count;\n      }, 0);\n      setTotal(res);\n    };\n\n    getTotal();\n  }, [cart]);\n\n  const reduction = id => {\n    cart.map(item => {\n      if (item._id === id) {\n        item.count === 1 ? item.count = 1 : item.count -= 1;\n      }\n\n      return {};\n    });\n    setCart([...cart]);\n  };\n\n  const increase = id => {\n    cart.map(item => {\n      if (item._id === id) {\n        item.count += 1;\n      }\n\n      return {};\n    });\n    setCart([...cart]);\n  };\n\n  const removeProduct = id => {\n    if (window.confirm(\"Do you want to delete this product?\")) {\n      cart.map((item, index) => {\n        if (item._id === id) {\n          cart.splice(index, 1);\n        }\n\n        return {};\n      });\n      setCart([...cart]);\n    }\n  };\n\n  const removeAllHandler = () => {\n    // setCart([]); first way to remove all elements\n    cart.splice(0, cart.length); //second way to remove all elements\n\n    setCart([...cart]);\n  };\n\n  if (cart.length === 0) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    style: {\n      textAlign: \"center\",\n      fontSize: \"5rem\"\n    },\n    children: \"Cart Empty\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [cart.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-container\",\n        style: {\n          backgroundImage: `url(${product.images[0]})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          title: product.title,\n          children: product.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"$\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"amount\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"count\",\n            onClick: () => reduction(product._id),\n            children: [\" \", \"-\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: product.count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"count\",\n            onClick: () => increase(product._id),\n            children: [\" \", \"+\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeProduct(product._id),\n            children: \"Remove To Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, product._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeAllHandler(),\n        children: \"Remove All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/payment\",\n        children: \"Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total: $ \", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cart, \"1JJJ29Q9SuUKN1y2HPU4FziFM8A=\");\n\n_c = Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/animesh/Desktop/weavers-web/Project/ecommerce/client/src/Components/Cart.js"],"names":["React","useContext","useState","useEffect","DataContext","Link","Cart","value","cart","setCart","total","setTotal","getTotal","res","reduce","prev","item","price","count","reduction","id","map","_id","increase","removeProduct","window","confirm","index","splice","removeAllHandler","length","textAlign","fontSize","product","backgroundImage","images","title","description","content"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { DataContext } from \"./DataProvider\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Cart() {\n  const value = useContext(DataContext);\n  const [cart, setCart] = value.cart;\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    const getTotal = () => {\n      const res = cart.reduce((prev, item) => {\n        return prev + item.price * item.count;\n      }, 0);\n      setTotal(res);\n    };\n    getTotal();\n  }, [cart]);\n\n  const reduction = (id) => {\n    cart.map((item) => {\n      if (item._id === id) {\n        item.count === 1 ? (item.count = 1) : (item.count -= 1);\n      }\n      return {};\n    });\n    setCart([...cart]);\n  };\n  const increase = (id) => {\n    cart.map((item) => {\n      if (item._id === id) {\n        item.count += 1;\n      }\n      return {};\n    });\n    setCart([...cart]);\n  };\n\n  const removeProduct = (id) => {\n    if (window.confirm(\"Do you want to delete this product?\")) {\n      cart.map((item, index) => {\n        if (item._id === id) {\n          cart.splice(index, 1);\n        }\n        return {};\n      });\n      setCart([...cart]);\n    }\n  };\n\n  const removeAllHandler = () => {\n    // setCart([]); first way to remove all elements\n    cart.splice(0, cart.length); //second way to remove all elements\n    setCart([...cart]);\n  };\n\n  if (cart.length === 0)\n    return (\n      <h2 style={{ textAlign: \"center\", fontSize: \"5rem\" }}>Cart Empty</h2>\n    );\n\n  return (\n    <>\n      {cart.map((product) => (\n        <div className=\"details\" key={product._id}>\n          <div\n            className=\"img-container\"\n            style={{ backgroundImage: `url(${product.images[0]})` }}\n          />\n\n          <div className=\"box-details\">\n            <h2 title={product.title}>{product.title}</h2>\n            <h3>${product.price}</h3>\n            <p>{product.description}</p>\n            <p>{product.content}</p>\n\n            <div className=\"amount\">\n              <button className=\"count\" onClick={() => reduction(product._id)}>\n                {\" \"}\n                -{\" \"}\n              </button>\n              <span>{product.count}</span>\n              <button className=\"count\" onClick={() => increase(product._id)}>\n                {\" \"}\n                +{\" \"}\n              </button>\n            </div>\n\n            <div>\n              <button onClick={() => removeProduct(product._id)}>\n                Remove To Cart\n              </button>\n            </div>\n          </div>\n        </div>\n      ))}\n\n      <div className=\"total\">\n        <button onClick={() => removeAllHandler()}>Remove All</button>\n        <Link to=\"/payment\">Payment</Link>\n        <h3>Total: $ {total}</h3>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}